# docker-compose.yml   (лежит в том же каталоге, где Dockerfile и Authorization.csproj)

services:
  # ─────────── PostgreSQL ───────────
  db:
    image: postgres:16
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: identity
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: reyeny123
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    # даём ASP.NET-приложению дождаться готовности БД
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ─────────── ASP-NET Core (Authorization) ───────────
  authorization:
    build:
      context: .                 # тот же каталог, где Dockerfile
      dockerfile: Dockerfile
    container_name: authorization
    restart: unless-stopped
    ports:
      - "8080:8080"              # хост:контейнер
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      # строка подключения для EF/Identity → appsettings:ConnectionStrings:DefaultConnection
      ConnectionStrings__DefaultConnection: "Host=db;Port=5432;Database=identity;Username=postgres;Password=reyeny123"
    # ждём, пока БД станет healthy
    depends_on:
      db:
        condition: service_healthy

  # ─────────── NGINX reverse-proxy ───────────
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - authorization

volumes:
  pg_data:
